{"version":3,"file":"default.6f113329b45fc9259c29.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,YAAY;AAC1E;AACA,8DAA8D,YAAY;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;AChfA;;;;;;;;;;;ACAA;AACA,mBAAO,CAAC,iEAA4B;AACpC,OAAO,oBAAoB,EAAE,mBAAO,CAAC,8BAAO;;AAE5C;AACA;AACA;;AAEA,yCAAyC,oBAAoB;AAC7D,sDAAsD,8BAA8B;AACpF,8CAA8C,sBAAsB;AACpE,iDAAiD,yBAAyB;;AAE1E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qBAAqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qBAAqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qBAAqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uBAAuB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,UAAU;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACtKA,qBAAqB,mBAAO,CAAC,+CAAQ;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AC5EA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB;;;;;;;UC9DlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;ACNA;;AAEA,gBAAgB,mBAAO,CAAC,wCAAY;AACpC,oBAAoB,mBAAO,CAAC,kDAAiB;;AAE7C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA,CAAC","sources":["webpack://nim/./node_modules/events/events.js","webpack://nim/./src/sass/nim-game-view.scss","webpack://nim/./src/js/nim-game-view.js","webpack://nim/./src/js/nim-game.js","webpack://nim/./src/js/nim.js","webpack://nim/webpack/bootstrap","webpack://nim/webpack/runtime/make namespace object","webpack://nim/./src/js/main.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport {};","/* globals IMAGINARY */\nrequire('../sass/nim-game-view.scss');\nconst {nimBest, nimRandom} = require('./nim');\n\nclass NimGameView {\n  constructor(game) {\n    this.game = game;\n\n    this.game.events.on('start', () => { this.onGameStart() });\n    this.game.events.on('take', (amount, player) => { this.onTake(amount, player); });\n    this.game.events.on('turn', (player) => { this.onTurn(player); });\n    this.game.events.on('victory', (player) => { this.onVictory(player); });\n\n    this.$element = $('<div></div>').addClass('nim-game');\n    this.$messageBoxContainer = $('<div></div>').addClass('message-box-container');\n    this.$messageBox = $('<div></div>').addClass('message-box').text('Human wins')\n\n    this.$take1Btn = $('<button></button>').attr('type', 'button');\n    this.$take2Btn = $('<button></button>').attr('type', 'button');\n    this.$take3Btn = $('<button></button>').attr('type', 'button');\n    this.$restartBtn = $('<button></button>').attr('type', 'button');\n\n    // Sticks\n    this.sticks = [];\n    for (let i = 0; i < game.getNumSticks(); i += 1) {\n      this.sticks.push($('<div></div>').addClass(['stick', 'img-fluid']));\n    }\n    this.$element.append(\n      $('<div></div>').addClass('stick-container')\n        .append($('<div></div>').addClass(['row', 'content-justify-center'])\n          .append(this.sticks.map(stick => $('<div></div>')\n            .addClass('col')\n            .append(stick))))\n        .append(this.$messageBoxContainer.append(this.$messageBox)));\n\n    // Input\n    this.$element.append(\n      $('<div></div>').addClass('input-pane')\n        .append(\n          $('<div></div>').addClass('row justify-content-between')\n            .append([\n              $('<div></div>').addClass('col-9')\n                .append($('<div></div>').addClass('row')\n                  .append([\n                    $('<div>').addClass('col').append(\n                      $('<div>').addClass('d-block').append(\n                        this.$take1Btn.addClass(['btn', 'btn-secondary', 'btn-take'])\n                          .text(IMAGINARY.i18n.t('TAKE_N').replace('%n', '1'))\n                          .on('click', () => { this.handleTake(1); })\n                      )\n                    ),\n                    $('<div>').addClass('col').append(\n                      $('<div>').addClass('d-block').append(\n                        this.$take2Btn.addClass(['btn', 'btn-secondary', 'btn-take'])\n                          .text(IMAGINARY.i18n.t('TAKE_N').replace('%n', '2'))\n                          .on('click', () => { this.handleTake(2); })\n                        )\n                    ),\n                    $('<div>').addClass('col').append(\n                      $('<div>').addClass('d-block').append(\n                        this.$take3Btn.addClass(['btn', 'btn-secondary', 'btn-take'])\n                          .text(IMAGINARY.i18n.t('TAKE_N').replace('%n', '3'))\n                          .on('click', () => { this.handleTake(3); })\n                      )\n                    )\n                  ])),\n              $('<div></div>').addClass('col-3').append(\n                $('<div>').addClass('col').append(\n                  $('<div>').addClass('d-block').append(\n                    this.$restartBtn.addClass(['btn', 'btn-outline-secondary', 'btn-restart'])\n                      .text(IMAGINARY.i18n.t('RESTART'))\n                      .on('click', () => { this.handleRestart(); })\n                  )\n                )\n              ),\n            ])\n        )\n    );\n  }\n\n  removeSticks(amount, direction) {\n    this.sticks.filter(stick => !stick.hasClass('taken')).reverse().slice(0, amount)\n      .forEach(stick => stick.addClass(['taken', `taken-${direction}`]));\n  }\n\n  resetSticks() {\n    this.sticks.forEach(stick => stick.removeClass(['taken', 'taken-n', 'taken-s']));\n  }\n\n  showMessage(text) {\n    this.$messageBox.text(text);\n    this.$messageBoxContainer.addClass('visible');\n  }\n\n  hideMessage() {\n    this.$messageBoxContainer.removeClass('visible');\n  }\n\n  disableInput() {\n    this.disableTake();\n    this.disableRestart();\n  }\n\n  enableInput() {\n    this.enableTake();\n    this.enableRestart();\n  }\n\n  disableTake() {\n    [ this.$take1Btn, this.$take2Btn, this.$take3Btn ].forEach((button) => {\n      button.addClass('disabled').attr('disabled', true);\n    });\n  }\n\n  enableTake() {\n    [ this.$take1Btn, this.$take2Btn, this.$take3Btn ].forEach((button) => {\n      button.removeClass('disabled').attr('disabled', false);\n    });\n  }\n\n  disableRestart() {\n    this.$restartBtn.addClass('disabled').attr('disabled', true);\n  }\n\n  enableRestart() {\n    this.$restartBtn.removeClass('disabled').attr('disabled', false);\n  }\n\n  handleTake(amount) {\n    this.game.take(amount);\n  }\n\n  handleRestart() {\n    this.game.restart();\n  }\n\n  onGameStart() {\n    this.hideMessage();\n    this.resetSticks();\n  }\n\n  onTake(amount, player) {\n    this.removeSticks(amount, player === 'human' ? 's' : 'n');\n  }\n\n  onTurn(player) {\n    if (player === 'human') {\n      this.enableInput();\n    } else {\n      this.disableInput();\n    }\n\n    if (player === 'computer') {\n      setTimeout(() => {\n        this.game.take(nimBest(this.game.sticksLeft));\n      }, Math.random() * 1500 + 1000);\n    }\n  }\n\n  onVictory(player) {\n    this.showMessage(player === 'human' ? IMAGINARY.i18n.t('HUMAN_WINS') : IMAGINARY.i18n.t('COMPUTER_WINS'))\n    this.disableTake();\n    this.enableRestart();\n  }\n}\n\nmodule.exports = NimGameView;\n","const EventEmitter = require('events');\n\n/**\n * A nim game with a single heap.\n *\n * - 2 players (human and computer).\n * - Human starts\n * - 10 sticks\n * - Each player can remove 1-3 sticks.\n * - Last player to remove a stick loses.\n */\nclass NimGame {\n  constructor() {\n    this.events = new EventEmitter();\n    this.restart();\n  }\n\n  getNumSticks() {\n    return NimGame.NumSticks;\n  }\n\n  restart() {\n    this.setSticksLeft(NimGame.NumSticks);\n    this.setCurrentPlayer(NimGame.Human);\n    this.isOver = false;\n    this.events.emit('start', this.currentPlayer);\n  }\n\n  setSticksLeft(sticksLeft) {\n    this.sticksLeft = sticksLeft;\n    this.events.emit('sticksChanged');\n  }\n\n  setCurrentPlayer(player) {\n    this.currentPlayer = player;\n    this.events.emit('turn', this.currentPlayer);\n  }\n\n  opossitePlayer(player) {\n    return player === NimGame.Human ? NimGame.Computer : NimGame.Human;\n  }\n\n  switchTurn() {\n    this.setCurrentPlayer(this.opossitePlayer(this.currentPlayer));\n  }\n\n  onGameWon(player) {\n    this.isOver = true;\n    this.events.emit('victory', player);\n  }\n\n  take(numberOfSticks) {\n    if (numberOfSticks < 1 || numberOfSticks > 3) {\n      throw new Error('Invalid number of sticks');\n    }\n\n    if (numberOfSticks > this.sticksLeft) {\n      throw new Error('Not enough sticks');\n    }\n\n    this.events.emit('take', numberOfSticks, this.currentPlayer);\n    this.setSticksLeft(this.sticksLeft - numberOfSticks);\n    if (this.sticksLeft === 1) {\n      this.onGameWon(this.currentPlayer);\n    } else if (this.sticksLeft === 0) {\n      this.onGameWon(this.opossitePlayer(this.currentPlayer));\n    } else {\n      this.switchTurn();\n    }\n  }\n}\n\nNimGame.NumSticks = 10;\nNimGame.Human = 'human';\nNimGame.Computer = 'computer';\n\nmodule.exports = NimGame;\n","/**\n * Solver for the 10-stick version of the nim game\n */\n\n/**\n * Return the amount of sticks to take (up to 3) to win the nim game.\n *\n * @param {number} sticksLeft Number of sticks left on the board\n * @return {number}\n */\nfunction nimBest(sticksLeft) {\n  if (sticksLeft === 0) {\n    throw new Error('Can\\'t play nim with no sticks left.')\n  }\n  switch (sticksLeft % 4) {\n    case 1:\n      return 1;\n    case 2:\n      return 1;\n    case 3:\n      return 2;\n    case 0:\n      return 3;\n  }\n}\n\n/**\n * Return the amount of sticks to take (up to 3) to lose the game (or try to).\n * @param {number} sticksLeft\n * @return {number}\n */\nfunction nimWorst(sticksLeft) {\n  if (sticksLeft === 0) {\n    throw new Error('Can\\'t play nim with no sticks left.')\n  }\n\n  switch (sticksLeft % 4) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 3:\n      return 3;\n    case 0:\n      return 1;\n  }\n}\n\n/**\n * Return a random amount of sticks to take (1-3)\n *\n * @param {number} sticksLeft\n * @return {number}\n */\nfunction nimRandom(sticksLeft) {\n  if (sticksLeft === 0) {\n    throw new Error('Can\\'t play nim with no sticks left.')\n  }\n\n  return Math.floor(Math.random() * 3) + 1;\n}\n\nmodule.exports = {nimBest, nimRandom};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* globals IMAGINARY */\n\nconst NimGame = require('./nim-game');\nconst NimGameView = require('./nim-game-view');\n\nIMAGINARY.i18n.init({\n  queryStringVariable: 'lang',\n  translationsDirectory: 'tr',\n  defaultLanguage: 'en'\n}).then(function(){\n  $('[data-component=\"nim-game\"]').each((i, container) => {\n    const game = new NimGame();\n    const view = new NimGameView(game);\n    $(container).append(view.$element);\n    window.gameView = view;\n  });\n}).catch(function(err){\n  console.error(err);\n});\n"],"names":[],"sourceRoot":""}